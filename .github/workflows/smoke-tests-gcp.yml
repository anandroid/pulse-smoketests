name: Pulse Smoke Tests (GCP Integrated)

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development

env:
  GCP_PROJECT_ID: api-project-269146618053

jobs:
  smoke-tests-gcp:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write # For Google Cloud authentication
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
        project_id: ${{ env.GCP_PROJECT_ID }}

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Fetch secrets from Google Cloud
      id: secrets
      run: |
        echo "::add-mask::$(gcloud secrets versions access latest --secret=SUPABASE_URL)"
        echo "::add-mask::$(gcloud secrets versions access latest --secret=SUPABASE_ANON_KEY)"
        echo "::add-mask::$(gcloud secrets versions access latest --secret=SUPABASE_SERVICE_ROLE_SECRET)"
        
        echo "SUPABASE_URL=$(gcloud secrets versions access latest --secret=SUPABASE_URL)" >> $GITHUB_ENV
        echo "SUPABASE_ANON_KEY=$(gcloud secrets versions access latest --secret=SUPABASE_ANON_KEY)" >> $GITHUB_ENV
        echo "SUPABASE_SERVICE_ROLE_KEY=$(gcloud secrets versions access latest --secret=SUPABASE_SERVICE_ROLE_SECRET)" >> $GITHUB_ENV

    - name: Install dependencies
      run: npm ci

    - name: Run smoke tests
      env:
        PULSE_API_BASE_URL: https://pulse-apis-269146618053.us-central1.run.app
        TEST_AREA: ${{ vars.TEST_AREA || 'tampa-bay' }}
        TEST_REGION: ${{ vars.TEST_REGION || 'FL' }}
        TEST_COUNTRY: ${{ vars.TEST_COUNTRY || 'US' }}
        TEST_TIMELINE: ${{ vars.TEST_TIMELINE || 'today' }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        ENABLE_SLACK_NOTIFICATIONS: ${{ vars.ENABLE_SLACK_NOTIFICATIONS || 'true' }}
        ENABLE_DISCORD_NOTIFICATIONS: ${{ vars.ENABLE_DISCORD_NOTIFICATIONS || 'false' }}
        LOG_LEVEL: ${{ vars.LOG_LEVEL || 'info' }}
      run: npm run smoke

    - name: Run Jest tests
      env:
        SUPPRESS_LOGS: 'true'
      run: npm test

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ github.run_id }}
        path: |
          coverage/
          test-results/

  auto-healing-gcp:
    runs-on: ubuntu-latest
    needs: smoke-tests-gcp
    if: failure() && github.event_name == 'schedule'
    
    permissions:
      contents: write
      issues: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
        project_id: ${{ env.GCP_PROJECT_ID }}

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Fetch OpenAI API Key for auto-healing
      run: |
        echo "::add-mask::$(gcloud secrets versions access latest --secret=OPENAI_API_KEY)"
        echo "OPENAI_API_KEY=$(gcloud secrets versions access latest --secret=OPENAI_API_KEY)" >> $GITHUB_ENV

    - name: Create issue for failures
      uses: actions/create-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        title: 'Smoke Tests Failed - ${{ github.run_id }}'
        body: |
          ## Smoke Tests Failed
          
          **Run ID:** ${{ github.run_id }}
          **Time:** ${{ github.event.head_commit.timestamp }}
          
          The automated smoke tests have failed. Auto-healing will attempt to resolve common issues.
          
          [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
        labels: 'bug,automated-test-failure'